{"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"0qxMc-9KoSvX"},"id":"0qxMc-9KoSvX"},{"cell_type":"markdown","source":["## OECD Data Download"],"metadata":{"id":"XVMoctQioXjq"},"id":"XVMoctQioXjq"},{"cell_type":"code","source":["## save the installed packages in the google drive\n","import os, sys\n","from google.colab import drive\n","drive.mount('/content/drive')\n","nb_path = '/content/notebooks'\n","os.symlink('/content/drive/My Drive/Colab Notebooks', nb_path)\n","sys.path.insert(0,nb_path)\n","\n","# !pip install --target=$nb_path pandasdmx\n","# !pip install --target=$nb_path requests_cache\n","# !pip install --target=$nb_path pandas_datareader\n","# !pip install --target=$nb_path cif"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_v_2CUvyqY7o","executionInfo":{"status":"ok","timestamp":1688715694980,"user_tz":-540,"elapsed":17842,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}},"outputId":"a86f71e3-c070-4a9d-c831-c439c9788102"},"id":"_v_2CUvyqY7o","execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":1,"id":"76bbddd2","metadata":{"id":"76bbddd2","executionInfo":{"status":"ok","timestamp":1688715673133,"user_tz":-540,"elapsed":773,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}}},"outputs":[],"source":["import pandas as pd\n","from datetime import datetime, timedelta\n","import datetime as dt\n","import pandas_datareader.data as web\n","import json\n","import requests\n","from google.colab import drive\n","from tqdm import tqdm\n","# import cif\n","\n","path='drive/MyDrive/Capstone(Team10)/code'"]},{"cell_type":"code","execution_count":null,"id":"3e3e040e","metadata":{"id":"3e3e040e"},"outputs":[],"source":["## downloading MEI data for listed countries using OECD API(--> can be deleted, already included in the following download)\n","# df = pd.read_csv('https://stats.oecd.org/SDMX-JSON/data/MEI_CLI/all/OECD?contentType=csv')\n","# df.head()"]},{"cell_type":"code","execution_count":null,"id":"ea1ab5fd","metadata":{"id":"ea1ab5fd"},"outputs":[],"source":["## downloading MEI data for listed countries using OECD API\n","## long runtime: run only once for initial downloading\n","\n","# country_list=['USA','KOR', 'JPN']  ##'USA',\n","\n","# for country in tqdm(country_list):\n","#      df_MEI=pd.read_csv('https://stats.oecd.org/SDMX-JSON/data/MEI/{}...M/all/OECD?contentType=csv'.format(country))\n","#      df_MEI.to_csv(path+'/data/MEI_{}.csv'.format(country))"]},{"cell_type":"code","execution_count":null,"id":"6588635c","metadata":{"id":"6588635c"},"outputs":[],"source":["#len(data.Subject.unique()) ## 314 features\n","#list(data.TIME.unique()) ##1919.1~2023.5"]},{"cell_type":"code","source":["## creating metadata for OECD data\n","# metadata=data[['SUBJECT','Subject','Measure','Frequency','Unit','Reference Period']].drop_duplicates().reset_index()\n","# metadata['Level']=metadata['Subject'].apply(lambda x:x.split(' > ')[0])\n","# metadata['Name']=metadata['Subject'].apply(lambda x:' '.join(x.split(' > ')))\n","\n","## save metadata into folder\n","# metadata.to_csv(path+'/data/metadata_US.csv')\n","\n","# metadata['Level'].unique()\n","# metadata[metadata.Level=='Labour Compensation'][['SUBJECT','Name','Measure']].drop_duplicates()"],"metadata":{"id":"0LBLwePiYcyD"},"id":"0LBLwePiYcyD","execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Data Preparation\n","\n","### 1) Manual Feature Selection"],"metadata":{"id":"nri9W8VKHttD"},"id":"nri9W8VKHttD"},{"cell_type":"code","source":["# manually select features list on metadata_filter.xlsx file\n","# please run this cell after you change your feature list on metadata_filter.xlsx file\n","\n","df=pd.read_excel(path+'/data/metadata_filter.xlsx', sheet_name='list')\n","df.to_csv(path+'/data/metadata_final.csv')"],"metadata":{"id":"zdxc6cG2G0yo","executionInfo":{"status":"ok","timestamp":1688654111044,"user_tz":-540,"elapsed":918,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}}},"id":"zdxc6cG2G0yo","execution_count":32,"outputs":[]},{"cell_type":"markdown","source":["### 2) Data Preprocessing\n","\n","* Filtering the data with selected variables and Reshaping the DataFrame from long to wide format\n","\n","* Updating Metadata with information about if the variable is missing in other countries(KOR, JPN)\n","\n","* 23.7.6\n"," * 59 features from OECD\n"," * 4 features from other sources(FRED, Yahoo Finance)\n"],"metadata":{"id":"94tb4GnyH_3t"},"id":"94tb4GnyH_3t"},{"cell_type":"code","source":["## importing stored data and metadata with feature list\n","\n","## assign the country in interest to make structured raw data\n","country='USA'\n","\n","data=pd.read_csv(path+'/data//MEI_{}.csv'.format(country))\n","\n","## right after changing feature list on metadata_filter.xlsx file,\n","## please run ==> df=pd.read_excel(path+'/data/metadata_filter.xlsx', sheet_name='list') instead of following line\n","df=pd.read_csv(path+'/data/metadata_final.csv')\n","\n","filter_df=df[['SUBJECT','Measure']]\n","\n","keys = list(filter_df.columns.values)\n","i1 = data.set_index(keys).index\n","i2 = filter_df.set_index(keys).index\n","data1=data[i1.isin(i2)]\n","\n","## print the number of features\n","print('the number of existing features:', len(data1.SUBJECT.unique()))  ## 59 features for OECD, 4 features for other DB\n","\n","## transform TIME to datetime index\n","data1['TIME']=pd.DatetimeIndex(data1['TIME'])\n","\n","## transform dataframe from long to wide format\n","#filter_data=pd.crosstab(data1['TIME'], data1['SUBJECT'], data1['Value'],aggfunc='mean') ##.reset_index(drop=False)\n","filter_data=pd.pivot_table(data1, values='Value', index='TIME', columns= 'SUBJECT')\n","filter_data.index.names = ['date']\n","filter_data.columns.name = None\n","\n","filter_data.tail(3)\n","\n","## ftlist = original feature list specified\n","## data_ftlist = existing features in the dataset among original feature list\n","## missing_ftlist = missing features in the dataset among original feature list\n","ftlist=list(df['SUBJECT'].unique())\n","data_ftlist=list(filter_data.columns)\n","missing_ftlist=[x for x in ftlist if x not in data_ftlist][:(59-len(df))] ## except 11 manually downloaded features from other sources\n","\n","df['missing_{}'.format(country.lower())]=df['SUBJECT'].apply(lambda x:1 if x in missing_ftlist else 0)\n","\n","## uncomment to save the change in the files\n","df.to_csv(path+'/data/metadata_final.csv', index=False)\n","\n","## check name of missing features in the dataset\n","missing_ftnames=[df[df.SUBJECT==x]['Name'].values[0] for x in missing_ftlist]\n","print('the number of missing features:', len(missing_ftnames))\n","missing_ftnames\n","## Korea: 22 missing features / 59 features +11\n","## Japan: 29 missing features / 59 features +11\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mjH8j26GvOae","executionInfo":{"status":"ok","timestamp":1688654129737,"user_tz":-540,"elapsed":5149,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}},"outputId":"a530945c-cdc8-4f00-c7c3-d23a804354b5"},"id":"mjH8j26GvOae","execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-33-68329a17399e>:6: DtypeWarning: Columns (15,16,18,19) have mixed types. Specify dtype option on import or set low_memory=False.\n","  data=pd.read_csv(path+'/data//MEI_{}.csv'.format(country))\n"]},{"output_type":"stream","name":"stdout","text":["the number of existing features: 59\n","the number of missing features: 0\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-33-68329a17399e>:23: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data1['TIME']=pd.DatetimeIndex(data1['TIME'])\n"]},{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["## import data from other sources\n","other_data=pd.read_csv(path+'/data/other_data_{}.csv'.format(country))\n","\n","\n","## transform TIME to datetime index\n","other_data['Date']=pd.DatetimeIndex(other_data['Date'])\n","other_data=other_data.set_index('Date', drop=True)\n","other_data.head()\n","\n","raw_data=filter_data.merge(other_data, left_index=True, right_index=True)\n","raw_data.to_csv(path+'/data/rawdata_{}.csv'.format(country))"],"metadata":{"id":"138F48zTJqFt","executionInfo":{"status":"ok","timestamp":1688654136811,"user_tz":-540,"elapsed":886,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}}},"id":"138F48zTJqFt","execution_count":34,"outputs":[]},{"cell_type":"code","source":["raw_data.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"t6wm8M2oLZmK","executionInfo":{"status":"ok","timestamp":1688654141639,"user_tz":-540,"elapsed":354,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}},"outputId":"c68a7494-2b91-45b8-a2c6-95421035ed59"},"id":"t6wm8M2oLZmK","execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            BNBUCT02  BNEMTE02  BNODTE02  BNRMTE02  BSCICP02  BSCURT02  \\\n","2023-02-01       NaN       NaN       NaN       NaN      -2.6      78.4   \n","2023-03-01       NaN       NaN       NaN       NaN      -3.7      77.8   \n","2023-04-01       NaN       NaN       NaN       NaN      -2.9      78.4   \n","2023-05-01       NaN       NaN       NaN       NaN      -3.1      78.4   \n","2023-06-01       NaN       NaN       NaN       NaN      -4.0       NaN   \n","\n","            BSEMFT02  BSOBLV02   BSOITE02  BSPRTE02  ...  BBBOASPREAD  \\\n","2023-02-01 -1.488108     -10.0  -9.904271 -6.838155  ...         1.55   \n","2023-03-01 -4.394159     -10.0 -11.664475 -4.339667  ...         1.77   \n","2023-04-01 -0.707885     -11.0 -10.242475 -4.047127  ...         1.73   \n","2023-05-01  2.680256     -13.0 -17.834084  1.060291  ...         1.80   \n","2023-06-01 -5.300056      -9.0  -6.879287 -6.892674  ...         1.69   \n","\n","                  SP500    WTI  W875RX1  VIXCLS  RECPROUSM156N         DXY  \\\n","2023-02-01  3970.153442  76.83  14622.7   20.12           0.36  104.870003   \n","2023-03-01  4109.312445  73.28  14664.3   21.64           0.32  102.510002   \n","2023-04-01  4169.481401  79.45  14659.0   17.82           0.22  101.669998   \n","2023-05-01  4179.825462  71.58  14702.7   17.64           0.62  104.320000   \n","2023-06-01  4450.381312  68.11      NaN   14.00            NaN  102.910004   \n","\n","            y_nber  y_oecd  y_agg  \n","2023-02-01       0     0.0    0.0  \n","2023-03-01       0     0.0    0.0  \n","2023-04-01       0     0.0    0.0  \n","2023-05-01       0     0.0    0.0  \n","2023-06-01       0     0.0    0.0  \n","\n","[5 rows x 73 columns]"],"text/html":["\n","  <div id=\"df-d821fc4d-69e9-496a-9ef3-dfe2e2e468e4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BNBUCT02</th>\n","      <th>BNEMTE02</th>\n","      <th>BNODTE02</th>\n","      <th>BNRMTE02</th>\n","      <th>BSCICP02</th>\n","      <th>BSCURT02</th>\n","      <th>BSEMFT02</th>\n","      <th>BSOBLV02</th>\n","      <th>BSOITE02</th>\n","      <th>BSPRTE02</th>\n","      <th>...</th>\n","      <th>BBBOASPREAD</th>\n","      <th>SP500</th>\n","      <th>WTI</th>\n","      <th>W875RX1</th>\n","      <th>VIXCLS</th>\n","      <th>RECPROUSM156N</th>\n","      <th>DXY</th>\n","      <th>y_nber</th>\n","      <th>y_oecd</th>\n","      <th>y_agg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2023-02-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-2.6</td>\n","      <td>78.4</td>\n","      <td>-1.488108</td>\n","      <td>-10.0</td>\n","      <td>-9.904271</td>\n","      <td>-6.838155</td>\n","      <td>...</td>\n","      <td>1.55</td>\n","      <td>3970.153442</td>\n","      <td>76.83</td>\n","      <td>14622.7</td>\n","      <td>20.12</td>\n","      <td>0.36</td>\n","      <td>104.870003</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-03-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-3.7</td>\n","      <td>77.8</td>\n","      <td>-4.394159</td>\n","      <td>-10.0</td>\n","      <td>-11.664475</td>\n","      <td>-4.339667</td>\n","      <td>...</td>\n","      <td>1.77</td>\n","      <td>4109.312445</td>\n","      <td>73.28</td>\n","      <td>14664.3</td>\n","      <td>21.64</td>\n","      <td>0.32</td>\n","      <td>102.510002</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-04-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-2.9</td>\n","      <td>78.4</td>\n","      <td>-0.707885</td>\n","      <td>-11.0</td>\n","      <td>-10.242475</td>\n","      <td>-4.047127</td>\n","      <td>...</td>\n","      <td>1.73</td>\n","      <td>4169.481401</td>\n","      <td>79.45</td>\n","      <td>14659.0</td>\n","      <td>17.82</td>\n","      <td>0.22</td>\n","      <td>101.669998</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-05-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-3.1</td>\n","      <td>78.4</td>\n","      <td>2.680256</td>\n","      <td>-13.0</td>\n","      <td>-17.834084</td>\n","      <td>1.060291</td>\n","      <td>...</td>\n","      <td>1.80</td>\n","      <td>4179.825462</td>\n","      <td>71.58</td>\n","      <td>14702.7</td>\n","      <td>17.64</td>\n","      <td>0.62</td>\n","      <td>104.320000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2023-06-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>-4.0</td>\n","      <td>NaN</td>\n","      <td>-5.300056</td>\n","      <td>-9.0</td>\n","      <td>-6.879287</td>\n","      <td>-6.892674</td>\n","      <td>...</td>\n","      <td>1.69</td>\n","      <td>4450.381312</td>\n","      <td>68.11</td>\n","      <td>NaN</td>\n","      <td>14.00</td>\n","      <td>NaN</td>\n","      <td>102.910004</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 73 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d821fc4d-69e9-496a-9ef3-dfe2e2e468e4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d821fc4d-69e9-496a-9ef3-dfe2e2e468e4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d821fc4d-69e9-496a-9ef3-dfe2e2e468e4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["## show the available years(without na values) for each variables\n","round((len(raw_data)-raw_data.isna().sum())/12,2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rlFyZKArzHQE","executionInfo":{"status":"ok","timestamp":1688654147183,"user_tz":-540,"elapsed":372,"user":{"displayName":"Minjung Kwon","userId":"05819400405449765661"}},"outputId":"48bf4663-2df4-4900-ed90-ac36c81668b8"},"id":"rlFyZKArzHQE","execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BNBUCT02         23.00\n","BNEMTE02         23.00\n","BNODTE02         23.00\n","BNRMTE02         23.00\n","BSCICP02         73.50\n","                 ...  \n","RECPROUSM156N    33.42\n","DXY              38.50\n","y_nber           89.50\n","y_oecd           73.75\n","y_agg            73.75\n","Length: 73, dtype: float64"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["## need to add other variables\n","\n","* 1) 10-year Treasury less 3-month yield\n","* 2) TED spread? --> seems discontinued in FRED\n","* 3) BBB corporate spread\n","* 4) Wilshire index or other main stock market index\n","* 5) Oil price? WTI/Brent/Dubai"],"metadata":{"id":"ra5_X-jgNCwd"},"id":"ra5_X-jgNCwd"},{"cell_type":"code","source":[],"metadata":{"id":"_uOX-g9FNpkG"},"id":"_uOX-g9FNpkG","execution_count":null,"outputs":[]}],"metadata":{"hide_input":false,"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false},"colab":{"provenance":[{"file_id":"https://github.com/MJ-Kwon-Hub/Capstone_Team10/blob/main/downloading%20OECD.ipynb","timestamp":1688474487401}],"gpuType":"T4"}},"nbformat":4,"nbformat_minor":5}